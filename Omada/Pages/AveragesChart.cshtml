@page
@model Omada.Pages.AveragesChartModel
@{
    ViewData["Title"] = "AveragesGraph";
}

<div class="container">
    <div>
        <canvas id="chart">
        </canvas>
    </div>
    <table class="table table-light">
        @foreach (var team in Model.TeamsOpinions.Keys)
        {
            <tr>
                <td>
                    <button class="btn btn-light" id="@team" onclick="teamClick(this)">@team</button>
                    <div class="opinions" id="@team opinions" style="display: none">
                        <table class="table table-light">
                            @if (Model.TeamsOpinions.Where(t => t.Key == team).SelectMany(t => t.Value).Count() <= 0)
                            {
                                <tr>
                                    <th>No comments this week</th>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <th>Good Things</th>
                                    <th>Bad Things</th>

                                </tr>
                                @foreach (var opinion in Model.TeamsOpinions.Where(t => t.Key == team).SelectMany(t => t.Value).ToList())
                                {
                                    <tr>
                                        <td>
                                            @if(String.IsNullOrEmpty(opinion.SecondAnswer))
                                            {
                                                <p>No answer</p>
                                            }
                                            else
                                            {
                                                @opinion.SecondAnswer;
                                            }
                                        </td>
                                        <td>
                                            @if (String.IsNullOrEmpty(opinion.ThirdAnswer))
                                            {
                                                <p>No answer</p>
                                            }
                                            else
                                            {
                                                @opinion.ThirdAnswer;
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </td>
            </tr>
        }
        </table>
</div>


@section Scripts
{
<script>
    Date.prototype.getWeekNumber = function(){
        var d = new Date(Date.UTC(this.getFullYear(), this.getMonth(), this.getDate() + 1));
        var dayNum = d.getUTCDay() || 7;
        d.setUTCDate(d.getUTCDate() + 4 - dayNum);
        var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
        return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
    }; 
    
    var today = new Date();
    var weeks = [];
    var startWeek = today.getWeekNumber() - 5;

    var colors = function() {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return "rgb(" + r + "," + g + "," + b + ")";
        };

    var omadaChart = document.getElementById("chart").getContext("2d");
    var myDatasets = [];

    var dictionary = @Html.Raw(Json.Serialize(Model.AverageWeeks));
    function addData() {
        for (var key in dictionary) {
            if (dictionary.hasOwnProperty(key)) {
                var averages = dictionary[key].map(function (v) {
                        return {
                            x: v.week,
                            y: v.average
                    };
                });
                var color = colors();
                var current = {
                    fill: false,
                    borderColor: color,
                    label: key,
                    data: averages
                };
                myDatasets.push(current);
            }
        }
    }

    function createChart() {
        weeks.splice(0, weeks.length);
        myDatasets.splice(0, myDatasets.length);
        for (var i = 1; i <= today.getWeekNumber(); i++) {
            weeks.push(i);
        }
        addData();
        var massPopChart = new Chart(omadaChart, {
            type: 'line',
            data: {
                labels: weeks,
                datasets: myDatasets
            },

            options: {
                scales: {
                     xAxes: [{
                         ticks: {
                             min: startWeek,
                             max: today.getWeekNumber()
                        }
                    }]
                },
                plugins: {
                    zoom: {
                        pan: {
                            enabled: true,
                            mode: 'xy',
                            rangeMin: {
				                x: 1,
				                y: 1
                            },
                            rangeMax: {
                                x: today.getWeekNumber(),
				                y: 5
			                },
                        },
                        zoom: {
                            enabled: true,
                            mode: 'xy',
                            rangeMin: {
				                x: 1,
				                y: 1
                            },
                            rangeMax: {
                                x: today.getWeekNumber(),
				                y: 5
			                },
                            speed: 0.1,
                            sensitivity: 3
                        },
                        responsive: true
                    }
                }
            }
        });
    }

    window.onload = createChart();
    function teamClick(button) {
      var name = button.id;
      var users = document.getElementById((name) + " opinions");
      if (users.style.display === "none") {
        users.style.display = "block";
      }
      else {
        users.style.display = "none";
      }
    };
</script>
}